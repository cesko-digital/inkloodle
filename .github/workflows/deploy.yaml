name: "Build & Deploy"

on:
  push:
    branches: [main]

permissions:
  deployments: write
  contents: read
  id-token: write

env:
  ECR_URL: 905418360736.dkr.ecr.eu-central-1.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::905418360736:role/GHActions_DockerPush
          aws-region: eu-central-1

      - name: Set Up Environment
        run: |
          ls -la
          sudo apt-get update
          sudo apt-get install -y awscli jq

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          file: prod.Dockerfile
          push: true
          provenance: false
          tags: |
            ${{ env.ECR_URL }}/inkloodle:${{ github.sha }}
          cache-from: type=gha,scope=inkloodle
          cache-to: type=gha,mode=max,scope=inkloodle

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat >>~/.ssh/config <<END
          Host inkloodle
            HostName moodle.cesko.dev
            User deploy
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          END
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy
        run: |
          sed -i.bak "s|IMAGE_TAG|${{ github.sha }}|g" docker-compose.prod.yaml
          scp docker-compose.prod.yaml inkloodle:inkloodle/docker-compose.yaml
          scp config/Caddyfile inkloodle:inkloodle/config/Caddyfile
          ssh inkloodle "cd inkloodle && docker compose pull && docker compose up -d"
